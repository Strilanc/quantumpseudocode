import cirq

import quantumpseudocode


def test_if_less_than_then_circuit():
    with quantumpseudocode.Sim(enforce_release_at_zero=False):
        with quantumpseudocode.LogCirqCircuit() as circuit:
            with quantumpseudocode.qmanaged_int(bits=4, name='lhs') as lhs:
                with quantumpseudocode.qmanaged_int(bits=4, name='rhs') as rhs:
                    with quantumpseudocode.qmanaged(quantumpseudocode.Qubit(name='_or_eq')) as c:
                        with quantumpseudocode.qmanaged(quantumpseudocode.Qubit(name='t')) as t:
                            quantumpseudocode.emit(quantumpseudocode.IfLessThanThenGate(
                                lhs=lhs,
                                rhs=rhs,
                                or_equal=c,
                                effect=quantumpseudocode.OP_TOGGLE(quantumpseudocode.RawQureg([t]))))

    cirq.testing.assert_has_diagram(circuit, r"""
_or_eq: ---X-------@---@-------------------------------------------------------------------------------------------------------@---@-------X---
           |       |   |                                                                                                       |   |       |
lhs[0]: ---|---X---X---@-------------------------------------------------------------------------------------------------------@---X---X---|---
           |   |       |                                                                                                       |       |   |
lhs[1]: ---|---|-------|-------X---X---@-----------------------------------------------------------------------@---X---X-------|-------|---|---
           |   |       |       |   |   |                                                                       |   |   |       |       |   |
lhs[2]: ---|---|-------|-------|---|---|-------X---X---@---------------------------------------@---X---X-------|---|---|-------|-------|---|---
           |   |       |       |   |   |       |   |   |                                       |   |   |       |   |   |       |       |   |
lhs[3]: ---|---|-------|-------|---|---|-------|---|---|-------X---X---@-------@---X---X-------|---|---|-------|---|---|-------|-------|---|---
           |   |       |       |   |   |       |   |   |       |   |   |       |   |   |       |   |   |       |   |   |       |       |   |
rhs[0]: ---@---@-------X---X---|---@---@-------|---|---|-------|---|---|-------|---|---|-------|---|---|-------@---@---|---X---X-------@---@---
                           |   |       |       |   |   |       |   |   |       |   |   |       |   |   |       |       |   |
rhs[1]: -------------------@---@-------X---X---|---@---@-------|---|---|-------|---|---|-------@---@---|---X---X-------@---@-------------------
                                           |   |       |       |   |   |       |   |   |       |       |   |
rhs[2]: -----------------------------------@---@-------X---X---|---@---@-------@---@---|---X---X-------@---@-----------------------------------
                                                           |   |       |       |       |   |
rhs[3]: ---------------------------------------------------@---@-------X---@---X-------@---@---------------------------------------------------
                                                                           |
t: ------------------------------------------------------------------------X-------------------------------------------------------------------
        """, use_unicode_characters=False)
